apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlinx-serialization'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'androidx.navigation.safeargs.kotlin'

buildscript {
    ext {
        kotlinVersion = '1.4.10'
        kotlinxSerializationVersion = '1.0.0'
        appCompatVersion = '1.2.0'
        swipeRefreshVersion = '1.1.0'
        coreKtxVersion = '1.3.2'
        hiltVersion = '2.28.3-alpha'
        hiltViewModelVersion = '1.0.0-alpha02'
        assistedInjectVersion = '0.5.2'
        constraintLayoutVersion = '2.0.2'
        navigationVersion = '2.3.1'
        materialVersion = '1.2.1'
        recyclerViewVersion = '1.1.0'
        fastAdapterVersion = '5.2.4'
        itemAnimatorsVersion = '1.1.0'
        okHttpVersion = '4.9.0'
        retrofitVersion = '2.9.0'
        rxJavaVersion = '3.0.7'
        rxKotlinVersion = '3.0.1'
        rxAndroidVersion = '3.0.0'
        rxBindingVersion = '4.0.0'
        retrofitKotlinSerializationVersion = '0.8.0'
        jacksonKotlinVersion = '2.11.3'
        lifecycleVersion = '2.2.0'
        pagingVersion = '3.0.0-alpha07'
        junitVersion = '4.13.1'
        testExtJunitVersion = '1.1.0'
        testMockitoKotlin = '2.1.0'
    }
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.aveworks.eagle"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.aveworks.eagle.MainTestRunner"

        // DI https://gist.github.com/manuelvicnt/437668cda3a891d347e134b1de29aee1
        // To disable checking for the InstallIn annotation in some modules,
        // you need to enable the compiler option in your build.gradle file like this:
        javaCompileOptions {
            annotationProcessorOptions {
                arguments["dagger.hilt.disableModulesHaveInstallInCheck"] = "true"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    // Many third party libraries use Java 8 language features
    // Hilt, Retrofit
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation project(":wallet")
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinxSerializationVersion"
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swipeRefreshVersion"

    // Material
    implementation "com.google.android.material:material:$materialVersion"

    // FastAdapter
    implementation "com.mikepenz:fastadapter:$fastAdapterVersion"
    implementation "com.mikepenz:fastadapter-extensions-binding:$fastAdapterVersion" // view binding helpers
    implementation "com.mikepenz:fastadapter-extensions-scroll:$fastAdapterVersion" // scroll helpers
    implementation "com.mikepenz:itemanimators:$itemAnimatorsVersion"


    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"

    // RxJava
    implementation "io.reactivex.rxjava3:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava3:rxkotlin:$rxKotlinVersion"
    implementation "io.reactivex.rxjava3:rxandroid:$rxAndroidVersion"
    implementation "com.jakewharton.rxbinding4:rxbinding:$rxBindingVersion"

    // OkHttp & Retrofit
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava3:$retrofitVersion"
    implementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:$retrofitKotlinSerializationVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okHttpVersion"

    // Hilt (DI)
    compileOnly "com.squareup.inject:assisted-inject-annotations-dagger2:$assistedInjectVersion"
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hiltViewModelVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"
    kapt "androidx.hilt:hilt-compiler:$hiltViewModelVersion"
    kapt "com.squareup.inject:assisted-inject-processor-dagger2:$assistedInjectVersion"


    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    testImplementation "junit:junit:$junitVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$testMockitoKotlin"
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation "androidx.test.espresso:espresso-contrib:3.3.0"
    androidTestImplementation "androidx.test.espresso:espresso-intents:3.3.0"
    androidTestImplementation 'androidx.test:rules:1.1.0'
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hiltVersion"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hiltVersion"
}